package graph.java;
import java.util.*;
public class topologicalSorting {
    static  class  Edge{
        int src;
        int dest;
        public  Edge(int src,int dest){
            this.src=src;
            this.dest=dest;
        }
    }
    public  static void creatrgraph(ArrayList<Edge>[]graph){
        for(int i=0;i<graph.length;i++){
            graph[i]=new ArrayList<Edge>();
        }
        graph[2].add(new Edge(2,3));
        graph[3].add(new Edge(3,1));
        graph[4].add(new Edge(4,0));
        graph[4].add(new Edge(4,1));
        graph[5].add(new Edge(5,0));
        graph[5].add(new Edge(5,2));
    }
    //sort function
    public  static void topSortutil(ArrayList<Edge>[]graph,int curr,boolean []visit,Stack<Integer>stack){
        visit[curr]=true;
        for(int i=0;i<graph[curr].size();i++){
            Edge e=graph[curr].get(i);
            if(!visit[e.dest]){
                topSortutil(graph,e.dest,visit,stack);
            }
        }
        stack.push(curr);
    }
    public  static void topSort(ArrayList<Edge>[]graph,int v){
        boolean []visit=new boolean[v];
        Stack<Integer>stack=new Stack<>();
        for(int i=0;i<v;i++){
            if(!visit[i]){
                topSortutil(graph,i,visit,stack);
            }
        }
        while(!stack.isEmpty()){
            System.out.print(stack.pop()+" ");
        }
    }
    public static void main(String[] args) {
        int v=6;
        ArrayList<Edge>[]graph=new ArrayList[v];
        creatrgraph(graph);
        topSort(graph,v);
    }
}
//5 4 2 3 1 0
