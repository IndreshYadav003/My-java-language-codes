import java.util.*;
public class tocheckGraphIsClyalicOrNot {
    static  class Edge{
        int src;
        int dest;
        public  Edge(int src,int dest){
            this.src=src;
            this.dest=dest;
        }
    }
    private static  void  creategraph(ArrayList<Edge>graph[]){
        for(int i=0;i< graph.length;i++){
            graph[i]=new ArrayList<>();
        }
        graph[0].add(new Edge(0,2));
        graph[1].add(new Edge(1,0));
        graph[2].add(new Edge(2,3));
         graph[3].add(new Edge(3,0));
    }
    private  static  boolean isCyclicDirected(ArrayList<Edge>graph[],boolean []visit,int curr,boolean []rec){
        visit[curr]=true;
        rec[curr]=true;
        for(int i=0;i<graph[curr].size();i++){
            Edge e=graph[curr].get(i);
            if(rec[e.dest]){//cyclic
                return true;
        } else if (!visit[e.dest]) {
                if(isCyclicDirected(graph,visit, e.dest, rec))
                    return  true;
            }
            }
        rec[curr]=false;
        return false;
     }

    public static void main(String[] args) {
      int v=4;
      ArrayList<Edge>graph[]=new ArrayList[v];
      creategraph(graph);
      boolean visit[]=new boolean[v];
      boolean  rec[]=new boolean[v];
      for(int i=0;i<v;i++){
          if(!visit[i]){
              boolean isCycle=isCyclicDirected(graph,visit,0,rec);
              if(isCycle){
                  System.out.print(isCycle);
                  break;
              }
          }
      }
    }
}

