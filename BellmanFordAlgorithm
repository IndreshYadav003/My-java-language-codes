package graph;
import  java.util.*;
public class bellmanFordAlgorithm {
    // we create class
    static  class Edge{
        int src;
        int dest;
        int wt;
        public  Edge(int src,int dest,int wt){
            this.src=src;
            this.dest=dest;
            this.wt=wt;
        }
    }
    //create graph
    public  static void creatrgraph(ArrayList<Edge>[]graph){
        for(int i=0;i<graph.length;i++){
            graph[i]=new ArrayList<Edge>();
        }
        graph[0].add(new Edge(0,1,2));
        graph[0].add(new Edge(0,2,4));
        graph[1].add(new Edge(1,2,-4));
        graph[2].add(new Edge(2,3,2));
        graph[3].add(new Edge(3,4,4));
        graph[4].add(new Edge(4,1,-1));
    }
    // create bellmanagorithm
    public  static void bellmanFord(ArrayList<Edge>[]graph,int src,int v){
        int []dest=new int[v];
        for (int i=0;i<v;i++){
            if(i!=src){
                dest[i]=Integer.MAX_VALUE;
            }
        }
        for(int k=0;k<v-1;k++){
            for(int i=0;i<v;i++){
                for(int j=0;j<graph[i].size();j++){
                    Edge e=graph[i].get(j);
                    int u=e.src;
                    int V=e.dest;
                    if(dest[u]!=Integer.MAX_VALUE&&dest[u]+e.wt<dest[V]){
                        dest[V]= dest[u]+ e.wt;
                    }
                }
            }
        }
        for(int i=0;i<dest.length;i++){
            System.out.print(dest[i]+" ");
        }
        System.out.println();
    }

    public static void main(String[] args) {
        int v=5;
        ArrayList<Edge>[]graph=new ArrayList[v];
        creatrgraph(graph);
        bellmanFord(graph,0,v);
    }
}


//0 2 -2 0 4 
